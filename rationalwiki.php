<?php

# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require __DIR__ . '/PrivateSettings.php';
rwPrivateSettings();

# If PHP's memory limit is very low, some operations may fail.
ini_set( 'memory_limit', '128M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename         = "RationalWiki";
$wgCookieDomain = '.rationalwiki.org';

$wgFavicon="/w/favicon.ico";
$wgLogo = "/w/images/6/6e/Rw_logo.png";
# and so this is Saturnalia, and what have you done?
# To set the Christmas hat logo, just change File:Rw_logo.png

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
$wgScriptPath = "/w";
$wgScript = "$wgScriptPath/index.php";
$wgRedirectScript = "$wgScriptPath/redirect.php";
$wgUsePathInfo = true;
$wgArticlePath = "/wiki/$1";

## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL

$wgEnableEmail      = true;
$wgEnableWriteAPI = true;
$wgEnableUserEmail  = true;
$wgAllowUserJs = true;
$wgAllowUserCss = true;
$wgBlockAllowsUTEdit = false;

$wgEmergencyContact = "rationalwiki@rationalwiki.org";
$wgPasswordSender = "rationalwiki@rationalwiki.org";
#$wgUserEmailUseReplyTo = true;

## For a detailed description of the following switches see
## http://meta.wikimedia.org/Enotif and http://meta.wikimedia.org/Eauthent
## There are many more options for fine tuning available see
## /includes/DefaultSettings.php
## UPO means: this is also a user preference option
$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

$wgDBtype           = "mysql";
$wgDBserver         = "localhost";
$wgDBname           = "rationa1_wiki";
$wgDBuser           = "rationa1_wiki";
$wgDBprefix         = "rw_";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "TYPE=InnoDB";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

# Postgres specific settings
$wgDBport           = "5432";
$wgDBmwschema       = "mediawiki";
$wgDBts2schema      = "public";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";
$wgUseTeX = true;
$wgFileExtensions[] = 'svg';
$wgFileExtensions[] = 'xcf';
$wgSVGConverter='rsvg';
$wgFileExtensions[] = 'mp3';
$wgFileExtensions[] = 'pdf';
$wgFileExtensions[] = 'djvu';
$wgFileExtensions[] = 'ttf';
$wgFileExtensions[] = 'eot';
$wgFileExtensions[] = 'woff';

## Enable scary transclusion
# $wgEnableScaryTranscluding = true;

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:

$wgLocalInterwiki   = $wgSitename;

$wgLanguageCode = "en";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'vector';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = "RationalWiki:Copyrights"; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by-sa/3.0/";
$wgRightsText = "CC-BY-SA 3.0, or any later version";
#$wgRightsIcon = "http://i.creativecommons.org/l/by-sa/3.0/88x31.png";
#improve performance, saves a dns query, png is optimized to save a few kilobytes
$wgRightsIcon = "/w/88x31.png";
# $wgRightsCode = "gfdl"; # Not yet used

$wgAllowDisplayTitle=true;

$wgDiff = "/usr/bin/diff";
$wgDiff3 = "/usr/bin/diff3";

## Caching

$wgMainCacheType = CACHE_MEMCACHED;
$wgParserCacheType = CACHE_MEMCACHED;
$wgMessageCacheType = CACHE_MEMCACHED;
$wgMemCachedServers = array( "127.0.0.1:11211" );

## To disable cache, uncomment these
#$wgMainCacheType = CACHE_NONE;
#$wgParserCacheType = CACHE_NONE;
#$wgMessageCacheType = CACHE_NONE;
#$wgMemCachedServers = array();

# File caching for anon users
$wgUseFileCache = true;
$wgFileCacheDirectory = "/home/rationalwiki/mw-cache/html";

$wgCacheDirectory = '/home/rationalwiki/mw-cache/misc';

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
# $wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );
$wgCacheEpoch = '20170607000000';

#$wgReadOnly = "Update in progress see tech blog.";

$wgFavicon = "$wgScriptPath/favicon.ico";
$wgSpamRegex = "/<a href|766849|a3864d|947445|dbb687/i";
$wgRateLimts=
array(
    'edit' => array(
        'anon'   => 1,6000, // for any and all anonymous edits (aggregate)
        'user'   => 1,6000, // for each logged-in user
        'newbie' => 1,6000, // for each recent account; overrides 'user'
        'ip'     => 1,6000, // for each anon and recent account
        'subnet' => 1,6000, // ... with final octet removed
    ),
);

define("NS_CONSERVAPEDIA", 100);
define("NS_CONSERVAPEDIA_TALK", 101);
define("NS_ESSAY", 102);
define("NS_ESSAY_TALK", 103);
define("NS_DEBATE", 104);
define("NS_DEBATE_TALK", 105);
define("NS_FUN", 106);
define("NS_FUN_TALK", 107);
define("NS_RECIPE", 108);
define("NS_RECIPE_TALK", 109);
define("NS_FORUM", 110);
define("NS_FORUM_TALK", 111);

$wgExtraNamespaces =
	array(NS_CONSERVAPEDIA => "Conservapedia",
	      NS_CONSERVAPEDIA_TALK => "Conservapedia_talk",
	      NS_ESSAY => "Essay",
              NS_ESSAY_TALK => "Essay_talk",
              NS_DEBATE => "Debate",
              NS_DEBATE_TALK => "Debate_talk",
              NS_FUN => "Fun",
              NS_FUN_TALK => "Fun_talk",
	      NS_RECIPE => "Recipe",	
	      NS_RECIPE_TALK => "Recipe_talk",	
              NS_FORUM => "Forum",
              NS_FORUM_TALK => "Forum_talk"
	      );

$wgNamespacesWithSubpages = array(
       NS_MAIN                  => false,
       NS_TALK                  => true,
       NS_USER                  => true, 
       NS_USER_TALK             => true,
       NS_PROJECT               => true, 
       NS_PROJECT_TALK          => true, 
       NS_IMAGE_TALK            => true, 
       NS_TEMPLATE              => true,
       NS_TEMPLATE_TALK         => true, 
       NS_HELP                  => true,
       NS_HELP_TALK             => true, 
       NS_CATEGORY_TALK         => true, 
       NS_CONSERVAPEDIA         => true,
       NS_CONSERVAPEDIA_TALK    => true,
       NS_ESSAY                 => true,
       NS_ESSAY_TALK            => true,
       NS_DEBATE                => true,
       NS_DEBATE_TALK           => true,
       NS_FUN                   => true,
       NS_FUN_TALK              => true,
       NS_RECIPE                => true,
       NS_RECIPE_TALK           => true,
       NS_FORUM                 => true,
       NS_FORUM_TALK            => true
);

$wgNamespacesToBeSearchedDefault = array( 
       NS_MAIN              => true, 
);

$wgNoFollowLinks = true;

$wgCleanSignatures = false;
$wgRestrictDisplayTitle = false;

## HotCat relies on this to be useful, and it's generally a nice feature
$wgEnableMWSuggest = true;

## set this to zero when editing widely used templates, e.g. talkpage
$wgJobRunRate=1;

$wgMaxNameChars = 255;

$wgAutoConfirmAge = 3600*24;
$wgAutoConfirmCount = 10;

## Allow blocked users to edit user talk pages
$wgBlockAllowsUTEdit = true;
## Range blocks are a no-no
$wgSysopRangeBans = false;

## More password attempts, less annoyance
$wgPasswordAttemptThrottle = array( 'count' => 10, 'seconds' => 300 );

## add Commons as file repo
$wgUseInstantCommons = false;
$wgForeignFileRepos[] = array(
	'class' => 'ForeignAPIRepo',
	'name' => 'wikimediacommons',
	'apibase' => 'https://commons.wikimedia.org/w/api.php',
	'hashLevels' => 2,
	'fetchDescription' => true,
	'descriptionCacheExpiry' => 43200,
	'apiThumbCacheExpiry' => 86400,
);

## User rights
#$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['autoconfirmed']['rollback'] = true;
$wgGroupPermissions['autoconfirmed']['move'] = true;
## Vandals were uploading porn, so only autoconfirmed users can upload
$wgGroupPermissions['user']['upload'] = false;
$wgGroupPermissions['autoconfirmed']['upload'] = true;
$wgGroupPermissions['autoconfirmed']['upload_by_url'] = true;
## delete and suppress (hide from sysops) revisions
$wgGroupPermissions['sysop']['deleterevision']  = true;
$wgGroupPermissions['moderator']['suppressrevision'] = true;
$wgGroupPermissions['moderator']['suppressionlog'] = true;
$wgGroupPermissions['tech']['suppressrevision'] = true;
$wgGroupPermissions['tech']['suppressionlog'] = true;
## everyone can see the suppression log, though it's not on RecentChanges
$wgGroupPermissions['*']['suppressionlog'] = true;
$wgGroupPermissions['user' ]['move'] = false;
## Vandal bin uses the noratelimit right for 15 second limit, may break automated bot scripts
$wgGroupPermissions['bot']['noratelimit'] = true;
$wgGroupPermissions['bot']['editprotected'] = false;
## Irrational user group, bureaucrat-like powers without blocking
#$wgGroupPermissions['irrational']['noratelimit'] = true;
#$wgGroupPermissions['irrational']['autopatrol'] = true;
#$wgGroupPermissions['irrational']['editinterface'] = true;
#$wgGroupPermissions['irrational']['delete'] = true;
#$wgGroupPermissions['irrational']['undelete'] = true;
#$wgGroupPermissions['irrational']['bigdelete'] = true;
#$wgGroupPermissions['irrational']['editprotected'] = true;
#$wgGroupPermissions['irrational']['intercom-sendurgent'] = true;
$wgGroupPermissions['tech']['intercom-sendurgent'] = true;
$wgGroupPermissions['moderator']['intercom-sendurgent'] = true;
$wgGroupPermissions['ninja']['edit'] = true;
## prevent sysops from accessing dangerous stuff (Oct 27 2009)
$wgGroupPermissions['sysop']['editinterface'] = false;
$wgGroupPermissions['sysop']['editusercss'] = false;
$wgGroupPermissions['sysop']['edituserjs'] = false;
$wgGroupPermissions['sysop']['bigdelete'] = false;
$wgGroupPermissions['sysop']['import'] = false;
$wgGroupPermissions['sysop']['importupload'] = false;
$wgDeleteRevisionsLimit = 2000;
$wgGroupPermissions['sysop']['blockemail'] = false;
$wgGroupPermissions['moderator']['blockemail'] = true;

## give the above to techs
$wgGroupPermissions['staff']['editinterface'] = true;
$wgGroupPermissions['tech']['editinterface'] = true;
$wgGroupPermissions['tech']['editusercss'] = true;
$wgGroupPermissions['tech']['edituserjs'] = true;
$wgGroupPermissions['tech']['bigdelete'] = true;
$wgGroupPermissions['tech']['import'] = true;
$wgGroupPermissions['tech']['importupload'] = true;
## techs that are not sysops
$wgGroupPermissions['tech']['autopatrol'] = true;
$wgGroupPermissions['tech']['patrol'] = true;
## allow moving without creating redirect
$wgGroupPermissions['sysop']['suppressredirect'] = true;

## revoking sysops rights without edit waring
$wgGroupPermissions['sysoprevoke']['block']  = false;
$wgRevokePermissions['sysoprevoke']['block'] = true;
$wgRevokePermissions['sysoprevoke']['delete'] = true;
$wgRevokePermissions['sysoprevoke']['protect'] = true;
$wgRevokePermissions['sysoprevoke']['userrights'] = true;

##moderator-level protection, uncomment to enable
##Also uncomment the line in setupCustomNames
$wgRestrictionLevels[] = 'moderator';

##moderators and techs can grant and revoke all user rights
$wgGroupPermissions['moderator']['moderator'] = true;
$wgGroupPermissions['tech']['moderator'] = true;

## disable 15 second timeout for autoconfirmed, since not everyone wants to be a sysop (Sept 29 2010)
$wgGroupPermissions['autoconfirmed']['noratelimit'] = true;

## Allow trusted users to bot themselves for repetitive edits without needing to go through RfB
$wgGroupsAddToSelf['ninja'] = array('bot');
$wgGroupsRemoveFromSelf['ninja'] = array('bot');
$wgGroupPermissions['ninja']['import'] = true;
$wgGroupPermissions['ninja']['importupload'] = true;

$wgAddGroups['sysop'] = array('sysop', 'autopatrolled');
$wgRemoveGroups['sysop'] = array('sysop', 'autopatrolled');

$wgAddGroups['tech'] = true;
$wgRemoveGroups['tech'] = true;

$wgGroupPermissions['moderator']['userrights'] = true;

## user rights for abusefilter
$wgGroupPermissions['tech']['abusefilter-modify'] = true;
$wgGroupPermissions['*']['abusefilter-log-detail'] = true;
$wgGroupPermissions['*']['abusefilter-view'] = true;
$wgGroupPermissions['*']['abusefilter-log'] = true;
$wgGroupPermissions['tech']['abusefilter-private'] = true;
$wgGroupPermissions['tech']['abusefilter-modify-restricted'] = true;
$wgGroupPermissions['tech']['abusefilter-revert'] = true;


#autopatrolled users
$wgGroupPermissions['autopatrolled']['noratelimit'] = true;
$wgGroupPermissions['autopatrolled']['autopatrol'] = true;
$wgGroupPermissions['autopatrolled']['skipcaptcha'] = true;
$wgGroupPermissions['autopatrolled']['upload'] = true;

## fancy group names and other stuff
$wgExtensionFunctions[] = "setupCustomNames";

function setupCustomNames()
{
#  global $wgMessageCache;
#  $wgMessageCache->addMessages( array ('group-vandal' => 'Vandals') );
#  $wgMessageCache->addMessages( array ('group-vandal-member' => 'Vandal') );
#  $wgMessageCache->addMessages( array ('grouppage-vandal' => 'Project:Vandals') );
#  $wgMessageCache->addMessages( array ('group-irrational' => 'Irrational numbers') );
#  $wgMessageCache->addMessages( array ('group-irrational-member' => 'Irrational number') );
#  $wgMessageCache->addMessages( array ('grouppage-irrational' => 'Irrational number') );
#  $wgMessageCache->addMessages( array ('group-ninja' => 'Ninjas') );
#  $wgMessageCache->addMessages( array ('group-ninja-member' => 'Ninja') );
#  $wgMessageCache->addMessages( array ('grouppage-ninja' => 'Project:Ninjas') );
#  $wgMessageCache->addMessages( array ('group-tech' => 'Techs') );
#  $wgMessageCache->addMessages( array ('group-tech-member' => 'Tech') );
#  $wgMessageCache->addMessages( array ('grouppage-tech' => 'Project:Techs') );
#  $wgMessageCache->addMessages( array ('group-moderator' => 'Moderators') );
#  $wgMessageCache->addMessages( array ('group-moderator-member' => 'Moderator') );
#  $wgMessageCache->addMessages( array ('grouppage-moderator' => 'Project:Moderators') );
#  $wgMessageCache->addMessages( array ('protect-level-moderator' => 'Moderators only') );
#  $wgMessageCache->addMessages( array ('right-moderator' => 'Edit moderator-protected pages') );
#  $wgMessageCache->addMessages( array ('group-autopatrolled' => 'Autopatrolled') );
#  $wgMessageCache->addMessages( array ('group-autopatrolled-member' => 'Autopatrolled') );
#  $wgMessageCache->addMessages( array ('grouppage-autopatrolled' => 'Project:Autopatrolled') );
}

## Allow uploading from url, requires php5-curl
$wgAllowCopyUploads = true;

## to make licenses subpages work
$wgForceUIMsgAsContentMsg = array( 'licenses' );
$wgExtraLanguageNames = array( 'en-ownwork' => 'English upload form for own work',
                               'en-fairuse' => 'English upload form for fair use',
                               'en-free' => 'English upload form for free media', );

## Custom upload forms
## $wgUploadNavigationUrl = 'http://rationalwiki.com/wiki/index.php?title=Special:Upload&wpUploadDescription={{Information%0A+|Description++++=+%0A+|Source+++++++++=+%0A+|Date+++++++++++=+~~~~~%0A+|Author+++++++++=+%0A+|Permission+++++=+%3C!--+Optional:+select+a+license+from+the+drop-down+box+and+add+any+additional+information+here+--%3E+%0A+|other_versions+=+%3C!--+Optional:+list+similar+files+on+the+wiki+--%3E+%0A}}';
## $wgUploadNavigationUrl = 'http://rationalwiki.com/wiki/index.php?title=RationalWiki:Upload';

##
##  Extensions
##

require_once("$IP/extensions/Math/Math.php");
$wgTexvc ='/home/rationalwiki/public_html/w/extensions/Math/math/texvc';

## Recaptcha
#require_once( "$IP/extensions/ConfirmEdit/ConfirmEdit.php" );
#require_once( "$IP/extensions/ConfirmEdit/ReCaptcha.php" );
 
require_once( "$IP/extensions/ConfirmEdit/ConfirmEdit.php" );
require_once("$IP/extensions/SolveMedia/SolveMedia.php");
$solvemedia_theme = 'white';
$solvemedia_lang  = 'en';

#$wgCaptchaClass = 'QuestyCaptcha';
#$wgCaptchaQuestions[] = array( 'question' => "How many brackets are there, in our logo (hint: 4)?", 'answer' => "4");
#$wgCaptchaQuestions[] = array( 'question' => "What is the name of our webiste? (hint: lower case only, no .org)", 'answer' => "rationalwiki");
#$wgCaptchaQuestions[] = array( 'question' => "What is the first letter of the name of our website? (hint: lower case only)", 'answer' => "r");

#require_once("$IP/extensions/ConfirmEdit/MathCaptcha.php"); 
#$wgCaptchaClass = 'MathCaptcha';

 ## captcha switch for logins, set to false when bot can't log in
$wgCaptchaTriggers['badlogin']      = false;
$wgCaptchaTriggers['edit']      = true;

##Template edits are costly, prevent spambots from editing them
$wgCaptchaTriggersOnNamespace[NS_TEMPLATE]['edit'] = true;
$wgNamespaceProtection[NS_TEMPLATE] = array( 'autoconfirmed' );
##Forum and Forum talk namespaces get more spam because of their name
$wgCaptchaTriggersOnNamespace[NS_FORUM]['edit'] = true;
$wgCaptchaTriggersOnNamespace[NS_FORUM_TALK]['edit'] = true;

$wgGroupPermissions['autoconfirmed']['skipcaptcha'] = true;
 

## Vandal Brake

require_once("$IP/extensions/VandalBrake2/VandalBrake2.php");
$wgVandalBrakeConfigAllowMove = false;
$wgVandalBrakeConfigRemoveRights[] = 'intercom-sendmessage';
$wgVandalBrakeConfigRemoveRights[] = 'upload';

## Paypal buttons
require_once("$IP/extensions/RationalWiki/paypal.php");

## Wigo and other polls

require_once("$IP/extensions/wigo3/wigo3.php");
$wgWigo3ConfigStoreIPs = true;
require_once("$IP/extensions/wigo3/slider.php");
require_once("$IP/extensions/wigo3/checkbox.php");
require_once("$IP/extensions/wigo3/multi.php");
require_once("$IP/extensions/bestof/bestof.php");
require_once( "$IP/extensions/AutoWIGO2/AutoWIGO2.php" );
require_once( "$IP/extensions/Election/Election.php" );
#$wgElectionName = "Mods2017";
#$wgElectionCandidates = array("Avengerofthe BoN", "Applesauce", "Bongolian", "CheeseburgerFace", "David Gerard", "DiamondDisc1", "FuzzyCatPotato", "Hipocrite", "N7.Geth", "Pbfreespace3", "Weaseloid", "Zero", "Rational1", "CorruptUser", "Reverend Black Percy");

## Intercom
require_once("$IP/extensions/Intercom/Intercom.php");

## Put nofollow even on interwiki links, because we don't want to increase CP's page rankings
require_once("$IP/extensions/iw-nofollow/iw-nofollow.php");

## Allow user renaming
include_once('extensions/Renameuser/SpecialRenameuser.php');
$wgGroupPermissions['moderator']['renameuser'] = true;
$wgGroupPermissions['tech']['renameuser'] = true;

## mp3 player
require_once("$IP/extensions/FlashMP3/flashmp3.php");
 
## [[Special:Editcount]]
require_once("$IP/extensions/Editcount/Editcount.php");
 
## Bible tag for quick and easy Bible-thumping
require_once("$IP/extensions/RationalWiki/bible.php");
 
## Youtube
require_once("$IP/extensions/EmbedVideo/EmbedVideo.php");
 
require_once("$IP/extensions/ParserFunctions/ParserFunctions.php");
$wgPFEnableStringFunctions = true;
require_once("$IP/extensions/DynamicPageList/DynamicPageList.php");
require_once("$IP/extensions/SubPageList/SubPageList.php");
require_once("$IP/extensions/Variables/Variables.php");
require_once("$IP/extensions/Cite/Cite.php");
require_once("$IP/extensions/RandomSelection/RandomSelection.php");
## expand parserfunction, subst:expand fully expands templates
require_once("$IP/extensions/RationalWiki/Expand.php");
require_once( "{$IP}/extensions/Sort/Sort.php" );
require_once("$IP/extensions/CharInsert/CharInsert.php");
require_once("$IP/extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");
require_once("$IP/extensions/DynamicFunctions/DynamicFunctions.php");
require_once( "{$IP}/extensions/TitleBlacklist/TitleBlacklist.php" );
require_once( "$IP/extensions/Gadgets/Gadgets.php" );
require_once($IP.'/extensions/InputBox/InputBox.php');
require_once("$IP/extensions/PlaceNewSection/PlaceNewSection.php");
require_once("{$IP}/extensions/CreateBox/CreateBox.php");
require_once("$IP/extensions/ImageMap/ImageMap.php");
require_once("$IP/extensions/Interwiki/Interwiki.php");
$wgGroupPermissions['tech']['interwiki'] = true;

## Abuse filter

require_once("$IP/extensions/AntiSpoof/AntiSpoof.php");
## we only need this for abusefilter, we don't need the filtering
$wgAntiSpoofAccounts = false;
require_once( "$IP/extensions/AbuseFilter/AbuseFilter.php" );
$wgAbuseFilterBlockDuration = '314159 seconds';
#uncomment the below when we're off 1.19, set the above to 'indefinite'
#$wgAbuseFilterAnonBlockDuration = '314159 seconds';

## Ogg support
require( "$IP/extensions/OggHandler/OggHandler.php" );
$wgFFmpegLocation = '/usr/bin/ffmpeg';

## PDF and DjVu support
require_once("$IP/extensions/PdfHandler/PdfHandler.php");
$wgDjvuDump = "djvudump";
$wgDjvuRenderer = "ddjvu";

## Filters NSFW images
require_once( "$IP/extensions/ImageFilter/ImageFilter.php" );

## Lucene search
$wgSearchType = 'LuceneSearch';
$wgLuceneHost = '173.255.233.133';
$wgLucenePort = 8123;
require_once("$IP/extensions/MWSearch/MWSearch.php");
$wgLuceneSearchVersion = 2.1;

## topicon parser function to allow putting icons into the top right corner properly instead of using hacks
require_once("$IP/extensions/topicon/topicon.php");
## extension to hide the page title
require_once("$IP/extensions/RationalWiki/notitle.php");
## extension to change the page title style
require_once("$IP/extensions/RationalWiki/styletitle.php");
## checks if a new comment is signed
require_once("$IP/extensions/SigChecker/SigChecker.php");

require_once( "$IP/extensions/UsabilityInitiative/Vector/Vector.php" );
$wgVectorModules = array(
        'collapsibletabs' => array( 'global' => true, 'user' => false ), // Doesn't have a user pref
        'editwarning' => array( 'global' => false, 'user' => true ),
        'simplesearch' => array( 'global' => true, 'user' => false ), // Doesn't have a user pref
#	'collapsiblenav' => array( 'global' => true, 'user' => false ),
#	'footercleanup' => array( 'global' => false, 'user' => false ),
);
#Use star icon for watch
$wgVectorUseIconWatch = true;

# To really enable SimpleSearch (FIXME)
$wgVectorUseSimpleSearch = true;

# WikiEditor (Toolbar, Toc, Preview, Highlight)
require_once( "$IP/extensions/UsabilityInitiative/WikiEditor/WikiEditor.php" );

# WikiEditor config
$wgWikiEditorModules = array(
        'highlight' => array( 'global' => false, 'user' => false ),
        'preview' => array( 'global' => false, 'user' => false ),
        'toc' => array( 'global' => false, 'user' => true ),
        'toolbar' => array( 'global' => false, 'user' => true ),
);

$wgDefaultUserOptions['usebetatoolbar'] = 1;
$wgDefaultUserOptions['usebetatoolbar-cgd'] = 1;

## Temporary
#$wgShowExceptionDetails = true;

require_once( "$IP/extensions/LiquidThreads/LiquidThreads.php" );
$wgLqtTalkPages = false;

$wgMaxShellMemory = 0;
$wgThumbnailEpoch = '20101114210500';
$wgLocaltimezone = "UTC";

/* profiling  */

/** Only record profiling info for pages that took longer than this */
#$wgProfileLimit = 0.0;
/** Don't put non-profiling info into log file */
#$wgProfileOnly = false;
/** Log sums from profiling into "profiling" table in db. */
#$wgProfileToDatabase = true;
/** If true, print a raw call tree instead of per-function report */
#$wgProfileCallTree = false;
/** Should application server host be put into profiling table */
#$wgProfilePerHost = false;
 
/** Settings for UDP profiler */
#$wgUDPProfilerHost = '127.0.0.1';
#$wgUDPProfilerPort = '3811';
 
/** Detects non-matching wfProfileIn/wfProfileOut calls */
#$wgDebugProfiling = false;
/** Output debug message on every wfProfileIn/wfProfileOut */
#$wgDebugFunctionEntry = 0;
/** Lots of debugging output from SquidUpdate.php */
#$wgDebugSquid = false;

#$wgEnableProfileInfo = true;

$logGroups = array(
	'lqt',
	'exception',
	'slow-parse'
);
foreach ( $logGroups as $logGroup ) {
	$wgDebugLogGroups[$logGroup] = "/home/rationalwiki/mw-log/$logGroup.log";
}
$wgDBerrorLog = '/home/rationalwiki/mw-log/dberror.log';

$wgNamespaceRobotPolicies = array( NS_USER => 'noindex', NS_USER_TALK => 'noindex' );

$wgShowExceptionDetails = true;
$wgUseSquid = true;
$wgSquidServers = array('192.168.162.96','192.168.132.48');
$wgDisableCounters = true;

#Emergency blocking of IP proxies
$wgEnableDnsBlacklist = true;
$wgDnsBlacklistUrls = array( 'xbl.spamhaus.org', 'dnsbl.tornevall.org', 'all.s5h.net' );
